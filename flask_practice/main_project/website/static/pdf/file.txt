 # image_url = os.path.join(app.config['UPLOAD'], img_name)
                
                # # Generate URL for the uploaded image
                # image_url = url_for(send_from_directory(app.config['UPLOAD'], img_name ), filename=img_name)





@routes.route("/handel_image", methods=['GET','POST'])
def image_handel():
   if 'image' not in request.files:
            return "No image part in the request", 400
   image_url = None
   
   if request.method == "POST":
        igt = request.form.get('igt')
        session['igt'] = igt
        cds = request.form.get('cds')
        session['cds'] = cds
        opt = request.form.get('opt')
        session['opt'] = opt
        tf = request.form.get('tf')
        session['igt'] = tf
        prn = request.form.get('prn')
        session['prn'] = prn
      # Get Data from Form 
        img = request.files['image']  # get file
        if img and img.filename:
            
            img_name = secure_filename(img.filename)
            upload_folder = os.path.join(os.getcwd(), 'main_project', 'website', 'static', 'img')
            img_path = os.path.join(upload_folder, img_name)
            try:
                img.save(img_path) 
                image_url = get_image_url(img_name)   
                session['image'] = image_url  
               
            except Exception as e:
                # Handle file save error
                print(f"Error saving file: {e}")    
   
   return  render_template('img.html', img = image_url)



@routes.route("/download", methods=['GET','POST'])
def download():
    
    if request.method == "POST":
      # Get Data from Form 
        option= request.form.get("option")
        session['option'] = option
        if 'option' in session and 'igt' in session:
            Print_pdf(
                cds=session.get('cds'),  # Adjust these mappings as needed
                igt=session.get('igt'),  # Adjust these mappings as needed
                opt=session.get('opt'),  # Adjust these mappings as needed
                tf=session.get('tf'),  # Adjust these mappings as needed
                prn=session.get('prn'),  # Adjust these mappings as needed
                image_url=session.get('image')
            )
            # return f"PDF generated successfully! <a href='/uploads/{pdf_filename}'>Download PDF</a>"
        else:
            return "Form data incomplete. Please submit both forms.", 400
               
            
    return render_template('download.html')         
    



    <div class="container my-4">
        <div class="box">
            <h4>PDFs générés avec succès. Le fichier ZIP est prêt.</h4>
            <p>Votre fichier ZIP est prêt.</p>

            <div class="d-flex justify-content-around py-3">

                <!-- Back to form button -->
                <button type="button" class="btn btn-primary">
                    <a href="{{ url_for('routes.render_home_page') }}" class="text-white">Go back to the form</a>
                </button>
                <!-- Download button with dynamic filename -->
                <button type="button" id="download-btn" class="btn btn-secondary">
                    <a href="{{ url_for('routes.download_pdf')}}" target="_blank" class="text-white">Download</a>
                </button>



            </div>
        </div>
        
    </div>